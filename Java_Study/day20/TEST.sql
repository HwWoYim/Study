SELECT * FROM USER_TABLES;
SELECT * FROM STUDENT;

SELECT AGE,MAX(SCORE) FROM STUDENT WHERE AGE=22;
  SELECT AGE FROM STUDENT WHERE AGE=22;
  SELECT MAX(SCORE) FROM STUDENT WHERE AGE=22;
  -- GROUP BY절 : 데이터를 GROUPING하여 출력
SELECT AGE,MAX(SCORE) FROM STUDENT WHERE AGE=22 GROUP BY AGE;
  SELECT AGE,MAX(SCORE) -- 4 : 요청한 컬럼값을 화면에 출력
  FROM STUDENT -- 1 : 테이블 선택
  WHERE AGE=22 -- 2 : 조건절로 데이터 선택
  GROUP BY AGE; -- 3 : GROUPING

SELECT AGE,SUM(SCORE) FROM STUDENT WHERE SUM(SCORE)>=90 GROUP BY AGE;
  -- 그룹 함수를 사용하여 조건을 줄 때는 WHERE절xxx
  -- HAVING절O
SELECT AGE,SUM(SCORE) FROM STUDENT WHERE AGE!=24 GROUP BY AGE HAVING SUM(SCORE)>=40 ORDER BY SUM(SCORE) ASC;
  SELECT AGE,SUM(SCORE) -- 5
  FROM STUDENT -- 1
  WHERE AGE!=24 -- 2
  GROUP BY AGE -- 3
  HAVING SUM(SCORE)>=40 -- 4 : GROUPING이 먼저 진행이 완료된 상황
  ORDER BY SUM(SCORE) ASC; -- 6
  --------------------------------------
  SELECT AGE AS 나이,SUM(SCORE) -- 5
  FROM STUDENT -- 1
  WHERE AGE!=24 -- 2
  GROUP BY 나이 -- 3
  HAVING SUM(SCORE)>=40 -- 4 : GROUPING이 먼저 진행이 완료된 상황
  ORDER BY SUM(SCORE) ASC; -- 6
  -- ★ 실행 순서

  
  
  
CREATE TABLE PRODUCT(
   PID INT PRIMARY KEY,
   NAME VARCHAR(20) NOT NULL,
   PRICE INT NOT NULL,
   CNT INT DEFAULT 0,
   CATEGORY VARCHAR(50) NOT NULL
);
SELECT * FROM PRODUCT;
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'실내화',9900,24,'신발');
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'샌들',28000,30,'신발');
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'콜라',1200,100,'음료');
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'사이다',900,95,'음료');
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'단팥빵',1500,20,'빵');
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'소보로',1400,21,'빵');
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'도너츠',1300,22,'빵');
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'만화책',23000,70,'도서');
INSERT INTO PRODUCT VALUES((SELECT NVL(MAX(PID),0)+1 FROM PRODUCT),'장편소설',21800,120,'도서');
  


-- ★★★★★ 조인 JOIN
  -- : 여러개의 테이블 데이터들을 조합하여 출력
CREATE TABLE TEST1(
   ID INT PRIMARY KEY,
   NAME VARCHAR(20) NOT NULL,
   NUM INT NOT NULL -- 외래키
);
INSERT INTO TEST1 VALUES(1,'티모',101);
INSERT INTO TEST1 VALUES(2,'아리',201);
INSERT INTO TEST1 VALUES(3,'세라핀',401);
INSERT INTO TEST1 VALUES(4,'모르가나',401);
INSERT INTO TEST1 VALUES(5,'미스포춘',301);
INSERT INTO TEST1 VALUES(6,'비에고',501);
INSERT INTO TEST1 VALUES(7,'아무무',501);
INSERT INTO TEST1 VALUES(8,'이즈리얼',301);
INSERT INTO TEST1 VALUES(9,'가렌',101);
INSERT INTO TEST1 VALUES(10,'애니',201);
  -- 다른 테이블의 정보를 가져올때에는 반드시 해당 테이블의 PK를 가져와야함!
  -- 이렇게 가져온 상대 테이블의 PK 컬럼을 외래키(FOREIGN KEY)
  
CREATE TABLE TEST2(
   PID INT PRIMARY KEY,
   PNAME VARCHAR(20) NOT NULL
);
INSERT INTO TEST2 VALUES(101,'탑');
INSERT INTO TEST2 VALUES(201,'미드');
INSERT INTO TEST2 VALUES(301,'원딜');
INSERT INTO TEST2 VALUES(401,'서포터');
INSERT INTO TEST2 VALUES(501,'정글');

SELECT NAME,PNAME FROM TEST1,TEST2 WHERE TEST1.NUM=TEST2.PID;
  -- 이퀄 조인 EQUI JOIN
  -- 조인 조건이 A.컬럼=B.컬럼

  
-- ★★★★★ 페이징 처리 : 서브쿼리
SELECT * FROM PRODUCT;
SELECT ROWNUM,PID,NAME FROM PRODUCT WHERE ROWNUM<=3;
  -- ROWNUM : 오라클에서만 사용
  -- ROWNUM을 사용하는 이유 : 데이터가 많으면 많을 수록 속도 개선에서 좋음
SELECT * FROM () WHERE ???; 
-- 특정 부분()에서 ???에 해당하는 만큼 출력하겠습니다.
SELECT * FROM (SELECT A.*,ROWNUM AS RNUM FROM (SELECT * FROM PRODUCT ORDER BY PID DESC) A WHERE ROWNUM<=6) WHERE RNUM>=4; --전체 부분에서 특정 부분을 잡아보기
  -- SELECT A.*,ROWNUM AS RNUM FROM (SELECT * FROM PRODUCT ORDER BY PID DESC) A WHERE ROWNUM<=5) WHERE
  -- 전체테이블을 A라고 부를것이다.  [전체 테이블 부분 						] A에서   ROWNUM이 5이하인 부분



CREATE TABLE GOODS(
	PK INT PRIMARY KEY.
	NAME VARCHAR(20) NOT NULL,
	PRICE INT NOT NULL,
	CNT INT DEFAULT 0,
	CATEGORY VARCHAR(50) NOT NULL
);
SELECT * FROM GOODS;

